version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: emrnext_dev
      POSTGRES_USER: emrnext_user
      POSTGRES_PASSWORD: emrnext_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U emrnext_user -d emrnext_dev"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./src/EMRNext.Web
      dockerfile: Dockerfile.mac
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=emrnext_dev;Username=emrnext_user;Password=emrnext_dev_password
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./src/EMRNext.Web/ClientApp
      dockerfile: Dockerfile.mac
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://backend:5000/api
    depends_on:
      - backend

volumes:
  postgres_data:

networks:
  emrnext_network:
    driver: bridge
